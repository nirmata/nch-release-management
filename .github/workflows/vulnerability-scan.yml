name: Vulnerability Scan

on:
  schedule:
    # Run at 1:00 AM PST (9:00 AM UTC during standard time, 8:00 AM UTC during daylight time)
    # Using 9:00 AM UTC to cover PST standard time
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      release_filter:
            git commit -m "Update Grype vulnerability scan results for ${{ matrix.release }} - Scan: $(date -u '+%Y-%m-%d %H:%M:%S UTC') - Tag: ${{ steps.release-info.outputs.tag }} - Run: ${{ github.run_id }} - Images: ${{ steps.release-info.outputs.image_count }}"
            
            echo "✅ Committed scan results for ${{ matrix.release }}"
          fi
          
      - name: Push scan results to repository
        run: |
          # Check if there are any commits to push
          if git log --oneline origin/main..HEAD | grep -q "Update vulnerability scan results"; then
            echo "Pushing scan results to repository..."
            git push origin main
            echo "✅ Successfully pushed scan results for ${{ matrix.release }}"
          else
            echo "No scan result commits to push"
      - name: Upload scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vulnerability-scan-${{ matrix.release }}
          path: scan-results/${{ matrix.release }}/
          retention-days: 30
      - name: Check for critical vulnerabilities
        if: steps.scan.outputs.exit_code == '1'
          echo "::warning::Critical or high severity vulnerabilities found in release ${{ matrix.release }}"
          echo "Please review the scan results and take appropriate action."
          # Don't fail the job, just warn - you can change this behavior if needed
          # exit 1
  summary:
    runs-on: ubuntu-latest
    needs: [discover-releases, vulnerability-scan]
    if: always() && needs.discover-releases.outputs.releases != '[]'
    steps:
      - name: Download all scan results
        uses: actions/download-artifact@v4
          path: all-scan-results/
          pattern: vulnerability-scan-*
      - name: Generate overall summary
          echo "# Overall Vulnerability Scan Summary" > overall-summary.md
          echo "" >> overall-summary.md
          echo "**Scan Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> overall-summary.md
          echo "**Workflow Run**: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> overall-summary.md
          # Find all summary files
          find all-scan-results -name "summary.md" | while read -r summary_file; do
            release_name=$(echo "$summary_file" | sed 's|all-scan-results/vulnerability-scan-||' | sed 's|/summary.md||')
            echo "## Release: $release_name" >> overall-summary.md
            echo "" >> overall-summary.md
            # Skip the first line (title) of each summary
            tail -n +2 "$summary_file" >> overall-summary.md
          done
          echo "Generated overall summary:"
          cat overall-summary.md
      - name: Upload overall summary
          name: vulnerability-scan-summary
          path: overall-summary.md
