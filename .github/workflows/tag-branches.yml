# This is a basic workflow that is manually triggered

name: Tag Branches

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to apply'
        required: true
        type: string
      tag_repositories:
        description: 'Tag all repositories with the release tag'
        required: false
        type: boolean
        default: true
      tag_mongodb_images:
        description: 'Tag MongoDB images with the release tag'
        required: false
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io
  REGISTRY_OWNER: nirmata

jobs:
  tag-branch-and-build-image:
    if: ${{ github.event.inputs.tag_repositories == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name ${{ secrets.DEPLOYMENT_USERNAME }}
          git config --global user.email "github-actions@github.com"

      - name: Tag repositories
        run: |
          for repo in "java-activity" "java-catalog" "java-client-gateway" "java-cluster" "java-config" "java-environments" "gateway-service" "nirmata-haproxy" "java-host" "java-orchestrator" "policies-service" "java-security" "java-users" "webclient"; do
            echo "Tagging $repo"
            git clone https://x-access-token:${{ secrets.DEPLOYMENT_PAT }}@github.com/nirmata/$repo.git
            cd $repo
            git tag ${{ github.event.inputs.release_tag }}
            git push origin ${{ github.event.inputs.release_tag }}
            cd ..
          done

  tag-mongodb-images:
    if: ${{ github.event.inputs.tag_mongodb_images == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push MongoDB Community Server
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-community-server:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-community-server:8.0.8-ubi8
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Agent
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-agent-ubi:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-agent-ubi:108.0.2.8729-1
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Operator Version Upgrade Hook
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator-version-upgrade-post-start-hook:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.10
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Readiness Probe
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-readinessprobe:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-readinessprobe:1.0.23
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Kubernetes Operator
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator:0.13.0
          provenance: false
          sbom: false

      - name: Verify Multi-Arch Support
        run: |
          for image in mongodb-community-server mongodb-agent-ubi mongodb-kubernetes-operator-version-upgrade-post-start-hook mongodb-kubernetes-readinessprobe mongodb-kubernetes-operator; do
            echo "Verifying $image"
            docker manifest inspect ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/$image:${{ github.event.inputs.release_tag }} | grep -q '"architecture": "amd64"' || exit 1
            docker manifest inspect ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/$image:${{ github.event.inputs.release_tag }} | grep -q '"architecture": "arm64"' || exit 1
            echo "Multi-arch support verified for $image:${{ github.event.inputs.release_tag }}"
          done
