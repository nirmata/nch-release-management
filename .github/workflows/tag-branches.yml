# This is a basic workflow that is manually triggered

name: Tag Branches

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to apply'
        required: true
        type: string
      tag_all_repos:
        description: 'Tag all NCH repositories'
        required: false
        type: boolean
        default: true
      tag_java_activity:
        description: 'Tag java-activity repository'
        required: false
        type: boolean
        default: false
      tag_java_catalog:
        description: 'Tag java-catalog repository'
        required: false
        type: boolean
        default: false
      tag_java_client_gateway:
        description: 'Tag java-client-gateway repository'
        required: false
        type: boolean
        default: false
      tag_java_cluster:
        description: 'Tag java-cluster repository'
        required: false
        type: boolean
        default: false
      tag_java_config:
        description: 'Tag java-config repository'
        required: false
        type: boolean
        default: false
      tag_java_environments:
        description: 'Tag java-environments repository'
        required: false
        type: boolean
        default: false
      tag_gateway_service:
        description: 'Tag gateway-service repository'
        required: false
        type: boolean
        default: false
      tag_nirmata_haproxy:
        description: 'Tag nirmata-haproxy repository'
        required: false
        type: boolean
        default: false
      tag_java_host:
        description: 'Tag java-host repository'
        required: false
        type: boolean
        default: false
      tag_java_orchestrator:
        description: 'Tag java-orchestrator repository'
        required: false
        type: boolean
        default: false
      tag_policies_service:
        description: 'Tag policies-service repository'
        required: false
        type: boolean
        default: false
      tag_java_security:
        description: 'Tag java-security repository'
        required: false
        type: boolean
        default: false
      tag_java_users:
        description: 'Tag java-users repository'
        required: false
        type: boolean
        default: false
      tag_webclient:
        description: 'Tag webclient repository'
        required: false
        type: boolean
        default: false
      tag_mongodb_images:
        description: 'Tag MongoDB images with the release tag'
        required: false
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io
  REGISTRY_OWNER: nirmata

jobs:
  tag-branch-and-build-image:
    if: ${{ github.event.inputs.tag_all_repos == 'true' || github.event.inputs.tag_java_activity == 'true' || github.event.inputs.tag_java_catalog == 'true' || github.event.inputs.tag_java_client_gateway == 'true' || github.event.inputs.tag_java_cluster == 'true' || github.event.inputs.tag_java_config == 'true' || github.event.inputs.tag_java_environments == 'true' || github.event.inputs.tag_gateway_service == 'true' || github.event.inputs.tag_nirmata_haproxy == 'true' || github.event.inputs.tag_java_host == 'true' || github.event.inputs.tag_java_orchestrator == 'true' || github.event.inputs.tag_policies_service == 'true' || github.event.inputs.tag_java_security == 'true' || github.event.inputs.tag_java_users == 'true' || github.event.inputs.tag_webclient == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name ${{ secrets.DEPLOYMENT_USERNAME }}
          git config --global user.email "github-actions@github.com"

      - name: Tag repositories
        run: |
          # Define repository mapping
          declare -A repo_map
          repo_map["java-activity"]=${{ github.event.inputs.tag_java_activity }}
          repo_map["java-catalog"]=${{ github.event.inputs.tag_java_catalog }}
          repo_map["java-client-gateway"]=${{ github.event.inputs.tag_java_client_gateway }}
          repo_map["java-cluster"]=${{ github.event.inputs.tag_java_cluster }}
          repo_map["java-config"]=${{ github.event.inputs.tag_java_config }}
          repo_map["java-environments"]=${{ github.event.inputs.tag_java_environments }}
          repo_map["gateway-service"]=${{ github.event.inputs.tag_gateway_service }}
          repo_map["nirmata-haproxy"]=${{ github.event.inputs.tag_nirmata_haproxy }}
          repo_map["java-host"]=${{ github.event.inputs.tag_java_host }}
          repo_map["java-orchestrator"]=${{ github.event.inputs.tag_java_orchestrator }}
          repo_map["policies-service"]=${{ github.event.inputs.tag_policies_service }}
          repo_map["java-security"]=${{ github.event.inputs.tag_java_security }}
          repo_map["java-users"]=${{ github.event.inputs.tag_java_users }}
          repo_map["webclient"]=${{ github.event.inputs.tag_webclient }}

          # Tag all repositories if tag_all_repos is true, otherwise tag only selected ones
          if [ "${{ github.event.inputs.tag_all_repos }}" = "true" ]; then
            for repo in "${!repo_map[@]}"; do
              echo "Tagging $repo"
              git clone https://x-access-token:${{ secrets.DEPLOYMENT_PAT }}@github.com/nirmata/$repo.git
              cd $repo
              git tag ${{ github.event.inputs.release_tag }}
              git push origin ${{ github.event.inputs.release_tag }}
              cd ..
            done
          else
            for repo in "${!repo_map[@]}"; do
              if [ "${repo_map[$repo]}" = "true" ]; then
                echo "Tagging $repo"
                git clone https://x-access-token:${{ secrets.DEPLOYMENT_PAT }}@github.com/nirmata/$repo.git
                cd $repo
                git tag ${{ github.event.inputs.release_tag }}
                git push origin ${{ github.event.inputs.release_tag }}
                cd ..
              fi
            done
          fi

  tag-mongodb-images:
    if: ${{ github.event.inputs.tag_mongodb_images == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push MongoDB Community Server
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-community-server:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-community-server:8.0.8-ubi8
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Agent
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-agent-ubi:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-agent-ubi:108.0.2.8729-1
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Operator Version Upgrade Hook
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator-version-upgrade-post-start-hook:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.10
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Readiness Probe
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-readinessprobe:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-readinessprobe:1.0.23
          provenance: false
          sbom: false

      - name: Tag and push MongoDB Kubernetes Operator
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator:${{ github.event.inputs.release_tag }}
          build-args: |
            SOURCE_IMAGE=${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/mongodb-kubernetes-operator:0.13.0
          provenance: false
          sbom: false

      - name: Verify Multi-Arch Support
        run: |
          for image in mongodb-community-server mongodb-agent-ubi mongodb-kubernetes-operator-version-upgrade-post-start-hook mongodb-kubernetes-readinessprobe mongodb-kubernetes-operator; do
            echo "Verifying $image"
            docker manifest inspect ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/$image:${{ github.event.inputs.release_tag }} | grep -q '"architecture": "amd64"' || exit 1
            docker manifest inspect ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/$image:${{ github.event.inputs.release_tag }} | grep -q '"architecture": "arm64"' || exit 1
            echo "Multi-arch support verified for $image:${{ github.event.inputs.release_tag }}"
          done
